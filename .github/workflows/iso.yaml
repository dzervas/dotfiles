name: Build and Release NixOS ISO

on:
  push:
    branches: master

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Free up some disk space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true

      - name: Install Nix
        uses: cachix/install-nix-action@v27
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          # extra_nix_config: experimental-features = nix-command flakes

      - name: Set up cache for /nix/store
        uses: actions/cache@v4
        with:
          path: /nix/store
          key: ${{ runner.os }}-nix

      - name: Build the ISO image
        run: nix build ./nix#iso

      - name: Generate tag name
        id: tag
        run: echo "name=$(ls result/iso/ | sed -E 's/.*\.([[:alnum:]]+)-.*/iso-\1/')" >> $GITHUB_OUTPUT

      - uses: oras-project/setup-oras@v1
      - run: |
          cd result/iso
          oras login ghcr.io -u github -p ${{ secrets.GITHUB_TOKEN }}
          oras push --annotation "org.opencontainers.image.description=$(cat nix/ISO_USAGE.md)" ghcr.io/${{ github.repository }}/nixos-iso:${{ steps.tag.outputs.name }},latest *.iso

      # - name: Create GitHub Release
      #   id: create_release
      #   uses: softprops/action-gh-release@v2
      #   with:
      #     files: ./result/iso/*.iso
      #     tag_name: ${{ steps.tag.outputs.name }}
      #     make_latest: true
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
