#!/bin/bash
# Simple, directory based, todo list manager.
# Just create a .todir file in and add tasks!
# .todir syntax: "+" high, "#" medium, "-" low priority and "//" comment.
# For syntax highlighting take a look at .vim/syntax/todir.vim

NC='\x1b[0m'		#Green
LOW='\x1b[32m'		#Green
MID='\x1b[36m'		#Cyan
HIGH='\x1b[33m'		#Yellow

while getopts "chrs" opt; do
	case "$opt" in
		c)
			count=true
			;;
		h)
			echo -e "ToDir v0.6"
			echo -e "Usage: todir [-c] [-h] [-r] [-s] [path]\n"
			echo -e "A directory based todo list manager. Create a .todir file and add tasks"
			echo -e ".todir syntax: \"+\" high priority, \"#\" medium and \"-\" low. \"//\" is comment.\n"
			echo -e "\tpath\tPath of directory which contains .todir, default to current directory"
			echo -e "\t-c\tReturns number of tasks"
			echo -e "\t-h\tShows this message"
			echo -e "\t-r\tShows tasks of all subfolders, recursively"
			echo -e "\t-s\tSearch source code under path for tasks"
			exit
			;;
		r)
			recurse=true
			;;
		s)
			surf=true
			;;
		*)
			;;
	esac
done

shift $(($OPTIND - 1))
tpath=$(sed "s/.todir$//" <<< "$1")
# Remove trailing slash
tpath=${tpath%/}

if [ -z "$tpath" ]; then
	tpath="."
fi

if [ ! -z $count ]; then
	# Count the non-commented and non-empty lines
	grep -csv "^\s*//\|^$" "$tpath/.todir"
	exit
fi

if [ -z $surf ]; then
	if [ -z $recurse ]; then
		# Grep out the commented and empty lines
		data=$(grep -sv "^\s*//\|^$" "$tpath/.todir")
	else
		# Just execute over and over again in all subfolders that include .todir
		find ${tpath} -name .todir -exec echo "$0:" \; -exec $0 {} \; -exec echo "" \;
		exit
	fi
else
	if [ -z $recurse ]; then
		sargs=" "
	else
		sargs="-r"
	fi

	# Grep for lines including the words
	data=$(grep -s ${sargs} "FIXME\|TODO\|XXX" ${tpath}/*)
	# Parse grep output (ex. "hello.c: // TODO: this and that")
	# Catch filename, tag and message
	data=$(sed -r "s/(.*):.*(XXX|FIXME|TODO):\s*(.*)\s*/\2 \3 ${NC}at \1/g" <<< "$data")
	# Translate tags into todir ones
	data=$(sed "s/^XXX/+ /g" <<< "$data")
	data=$(sed "s/^FIXME/# /g" <<< "$data")
	data=$(sed "s/^TODO/- /g" <<< "$data")
fi

# Highlight & mark according to priority
data=$(sed "s/^\s*+.*/a${HIGH}&/" <<< "$data")
data=$(sed "s/^\s*#.*/b${MID}&/" <<< "$data")
data=$(sed "s/^\s*-.*/c${LOW}&/" <<< "$data")
# Sort based on mark
data=$(sort -s -k 1.1,1.1 <<< "$data")
# Remove marks
data=$(sed "s/^[abc]//" <<< "$data")

echo -e "$data"
